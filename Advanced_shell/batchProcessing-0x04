#!/bin/bash

# Create output directory
mkdir -p pokemon_data

# List of Pokémon
pokemon_list=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")

# API base URL
api_url="https://pokeapi.co/api/v2/pokemon"

# Array to hold background PIDs
pids=()

# Function to fetch data
fetch_pokemon() {
    local name=$1
    echo "Fetching data for $name..."
    if curl -s -f "$api_url/$name" -o "pokemon_data/$name.json"; then
        echo "Saved data to pokemon_data/$name.json"
    else
        echo "Failed to fetch $name" >> fetch_errors.log
    fi
}

# Spawn fetches in background and track PIDs
for name in "${pokemon_list[@]}"; do
    fetch_pokemon "$name" &
    pids+=($!)
done

# Optional: demonstrate use of kill (kill a fake process or last background fetch)
# Uncomment this to simulate:
# echo "Killing PID ${pids[-1]}..."
# kill "${pids[-1]}"

# Wait for all background jobs
for pid in "${pids[@]}"; do
    wait "$pid"
done

echo "All Pokémon data fetched"
